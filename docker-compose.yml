version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn Buyer.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - . :/usr/src/app/
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - 5432:5432
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
  rabbit:
    restart: always
    image: "rabbitmq:3-management"
    env_file:
      - ./.env
    environment:
      RABBITMQ_USER: myuser
      RABBITMQ_PASSWORD: mypassword

  selenium:
    image: selenium/standalone-firefox
    ports:
      - 4444:4444
      - 5900:5900
    environment:
        SE_SESSION_REQUEST_TIMEOUT: 5000
        SE_NODE_MAX_SESSIONS: 16
        SE_NODE_SESSION_TIMEOUT: 5000

  celery:
    restart: always
    build:
      context: .
    command: celery -A Buyer worker -l info
    volumes:
      - .:/Buyer_celery
    env_file:
      - ./.env
    depends_on:
      - app
      - rabbit
  #Web Interface Rabbitmq
  #    ports:
  #      - "15672:15672"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  postgres_data:
  static_volume:
  media_volume:
